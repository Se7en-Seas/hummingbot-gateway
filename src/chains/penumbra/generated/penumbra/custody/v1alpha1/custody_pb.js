// source: penumbra/custody/v1alpha1/custody.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var penumbra_core_keys_v1alpha1_keys_pb = require('../../../penumbra/core/keys/v1alpha1/keys_pb.js');
goog.object.extend(proto, penumbra_core_keys_v1alpha1_keys_pb);
var penumbra_core_transaction_v1alpha1_transaction_pb = require('../../../penumbra/core/transaction/v1alpha1/transaction_pb.js');
goog.object.extend(proto, penumbra_core_transaction_v1alpha1_transaction_pb);
goog.exportSymbol('proto.penumbra.custody.v1alpha1.AuthorizeRequest', null, global);
goog.exportSymbol('proto.penumbra.custody.v1alpha1.AuthorizeResponse', null, global);
goog.exportSymbol('proto.penumbra.custody.v1alpha1.PreAuthorization', null, global);
goog.exportSymbol('proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519', null, global);
goog.exportSymbol('proto.penumbra.custody.v1alpha1.PreAuthorization.PreAuthorizationCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.custody.v1alpha1.AuthorizeRequest.repeatedFields_, null);
};
goog.inherits(proto.penumbra.custody.v1alpha1.AuthorizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.custody.v1alpha1.AuthorizeRequest.displayName = 'proto.penumbra.custody.v1alpha1.AuthorizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.custody.v1alpha1.AuthorizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.custody.v1alpha1.AuthorizeResponse.displayName = 'proto.penumbra.custody.v1alpha1.AuthorizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.custody.v1alpha1.PreAuthorization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.penumbra.custody.v1alpha1.PreAuthorization.oneofGroups_);
};
goog.inherits(proto.penumbra.custody.v1alpha1.PreAuthorization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.custody.v1alpha1.PreAuthorization.displayName = 'proto.penumbra.custody.v1alpha1.PreAuthorization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.displayName = 'proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.custody.v1alpha1.AuthorizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    plan: (f = msg.getPlan()) && penumbra_core_transaction_v1alpha1_transaction_pb.TransactionPlan.toObject(includeInstance, f),
    walletId: (f = msg.getWalletId()) && penumbra_core_keys_v1alpha1_keys_pb.WalletId.toObject(includeInstance, f),
    preAuthorizationsList: jspb.Message.toObjectList(msg.getPreAuthorizationsList(),
    proto.penumbra.custody.v1alpha1.PreAuthorization.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.custody.v1alpha1.AuthorizeRequest;
  return proto.penumbra.custody.v1alpha1.AuthorizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_transaction_v1alpha1_transaction_pb.TransactionPlan;
      reader.readMessage(value,penumbra_core_transaction_v1alpha1_transaction_pb.TransactionPlan.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    case 2:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.WalletId;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.WalletId.deserializeBinaryFromReader);
      msg.setWalletId(value);
      break;
    case 3:
      var value = new proto.penumbra.custody.v1alpha1.PreAuthorization;
      reader.readMessage(value,proto.penumbra.custody.v1alpha1.PreAuthorization.deserializeBinaryFromReader);
      msg.addPreAuthorizations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.custody.v1alpha1.AuthorizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_transaction_v1alpha1_transaction_pb.TransactionPlan.serializeBinaryToWriter
    );
  }
  f = message.getWalletId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.WalletId.serializeBinaryToWriter
    );
  }
  f = message.getPreAuthorizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.penumbra.custody.v1alpha1.PreAuthorization.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.transaction.v1alpha1.TransactionPlan plan = 1;
 * @return {?proto.penumbra.core.transaction.v1alpha1.TransactionPlan}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.getPlan = function() {
  return /** @type{?proto.penumbra.core.transaction.v1alpha1.TransactionPlan} */ (
    jspb.Message.getWrapperField(this, penumbra_core_transaction_v1alpha1_transaction_pb.TransactionPlan, 1));
};


/**
 * @param {?proto.penumbra.core.transaction.v1alpha1.TransactionPlan|undefined} value
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
*/
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.setPlan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.clearPlan = function() {
  return this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.core.keys.v1alpha1.WalletId wallet_id = 2;
 * @return {?proto.penumbra.core.keys.v1alpha1.WalletId}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.getWalletId = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.WalletId} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.WalletId, 2));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.WalletId|undefined} value
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
*/
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.setWalletId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.clearWalletId = function() {
  return this.setWalletId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.hasWalletId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated PreAuthorization pre_authorizations = 3;
 * @return {!Array<!proto.penumbra.custody.v1alpha1.PreAuthorization>}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.getPreAuthorizationsList = function() {
  return /** @type{!Array<!proto.penumbra.custody.v1alpha1.PreAuthorization>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.custody.v1alpha1.PreAuthorization, 3));
};


/**
 * @param {!Array<!proto.penumbra.custody.v1alpha1.PreAuthorization>} value
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
*/
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.setPreAuthorizationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization}
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.addPreAuthorizations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.penumbra.custody.v1alpha1.PreAuthorization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeRequest} returns this
 */
proto.penumbra.custody.v1alpha1.AuthorizeRequest.prototype.clearPreAuthorizationsList = function() {
  return this.setPreAuthorizationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.custody.v1alpha1.AuthorizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && penumbra_core_transaction_v1alpha1_transaction_pb.AuthorizationData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeResponse}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.custody.v1alpha1.AuthorizeResponse;
  return proto.penumbra.custody.v1alpha1.AuthorizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeResponse}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_transaction_v1alpha1_transaction_pb.AuthorizationData;
      reader.readMessage(value,penumbra_core_transaction_v1alpha1_transaction_pb.AuthorizationData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.custody.v1alpha1.AuthorizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.custody.v1alpha1.AuthorizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_transaction_v1alpha1_transaction_pb.AuthorizationData.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.transaction.v1alpha1.AuthorizationData data = 1;
 * @return {?proto.penumbra.core.transaction.v1alpha1.AuthorizationData}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.getData = function() {
  return /** @type{?proto.penumbra.core.transaction.v1alpha1.AuthorizationData} */ (
    jspb.Message.getWrapperField(this, penumbra_core_transaction_v1alpha1_transaction_pb.AuthorizationData, 1));
};


/**
 * @param {?proto.penumbra.core.transaction.v1alpha1.AuthorizationData|undefined} value
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeResponse} returns this
*/
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.custody.v1alpha1.AuthorizeResponse} returns this
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.custody.v1alpha1.AuthorizeResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.PreAuthorizationCase = {
  PRE_AUTHORIZATION_NOT_SET: 0,
  ED25519: 1
};

/**
 * @return {proto.penumbra.custody.v1alpha1.PreAuthorization.PreAuthorizationCase}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.getPreAuthorizationCase = function() {
  return /** @type {proto.penumbra.custody.v1alpha1.PreAuthorization.PreAuthorizationCase} */(jspb.Message.computeOneofCase(this, proto.penumbra.custody.v1alpha1.PreAuthorization.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.custody.v1alpha1.PreAuthorization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.toObject = function(includeInstance, msg) {
  var f, obj = {
    ed25519: (f = msg.getEd25519()) && proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.custody.v1alpha1.PreAuthorization;
  return proto.penumbra.custody.v1alpha1.PreAuthorization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519;
      reader.readMessage(value,proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.deserializeBinaryFromReader);
      msg.setEd25519(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.custody.v1alpha1.PreAuthorization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEd25519();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.toObject = function(includeInstance, msg) {
  var f, obj = {
    vk: msg.getVk_asB64(),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519;
  return proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVk(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVk_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes vk = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getVk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes vk = 1;
 * This is a type-conversion wrapper around `getVk()`
 * @return {string}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getVk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVk()));
};


/**
 * optional bytes vk = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVk()`
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getVk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVk()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} returns this
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.setVk = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig = 2;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} returns this
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519.prototype.setSig = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional Ed25519 ed25519 = 1;
 * @return {?proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.getEd25519 = function() {
  return /** @type{?proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519, 1));
};


/**
 * @param {?proto.penumbra.custody.v1alpha1.PreAuthorization.Ed25519|undefined} value
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization} returns this
*/
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.setEd25519 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.penumbra.custody.v1alpha1.PreAuthorization.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.custody.v1alpha1.PreAuthorization} returns this
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.clearEd25519 = function() {
  return this.setEd25519(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.custody.v1alpha1.PreAuthorization.prototype.hasEd25519 = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.penumbra.custody.v1alpha1);
