// source: penumbra/core/component/chain/v1alpha1/chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var penumbra_core_asset_v1alpha1_asset_pb = require('../../../../../penumbra/core/asset/v1alpha1/asset_pb.js');
goog.object.extend(proto, penumbra_core_asset_v1alpha1_asset_pb);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.ChainParameters', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.EffectHash', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.Epoch', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.FmdParameters', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.GenesisContent', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.KnownAssets', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.NoteSource', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.Ratio', null, global);
goog.exportSymbol('proto.penumbra.core.component.chain.v1alpha1.SpendInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.EffectHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.EffectHash.displayName = 'proto.penumbra.core.component.chain.v1alpha1.EffectHash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.ChainParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.ChainParameters.displayName = 'proto.penumbra.core.component.chain.v1alpha1.ChainParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.Ratio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.Ratio.displayName = 'proto.penumbra.core.component.chain.v1alpha1.Ratio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.FmdParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.FmdParameters.displayName = 'proto.penumbra.core.component.chain.v1alpha1.FmdParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.core.component.chain.v1alpha1.KnownAssets.repeatedFields_, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.KnownAssets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.KnownAssets.displayName = 'proto.penumbra.core.component.chain.v1alpha1.KnownAssets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.NoteSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.NoteSource.displayName = 'proto.penumbra.core.component.chain.v1alpha1.NoteSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.SpendInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.SpendInfo.displayName = 'proto.penumbra.core.component.chain.v1alpha1.SpendInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.GenesisContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.GenesisContent.displayName = 'proto.penumbra.core.component.chain.v1alpha1.GenesisContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.Epoch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.Epoch.displayName = 'proto.penumbra.core.component.chain.v1alpha1.Epoch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.displayName = 'proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.displayName = 'proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.EffectHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EffectHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EffectHash}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.EffectHash;
  return proto.penumbra.core.component.chain.v1alpha1.EffectHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EffectHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EffectHash}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.EffectHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EffectHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EffectHash} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.EffectHash.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.ChainParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epochDuration: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.ChainParameters;
  return proto.penumbra.core.component.chain.v1alpha1.ChainParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.ChainParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpochDuration();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 epoch_duration = 2;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.getEpochDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.ChainParameters} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.ChainParameters.prototype.setEpochDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.Ratio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Ratio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.toObject = function(includeInstance, msg) {
  var f, obj = {
    numerator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    denominator: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Ratio}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.Ratio;
  return proto.penumbra.core.component.chain.v1alpha1.Ratio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Ratio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Ratio}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumerator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDenominator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.Ratio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Ratio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumerator();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDenominator();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 numerator = 1;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.getNumerator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Ratio} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.setNumerator = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 denominator = 2;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.getDenominator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Ratio} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.Ratio.prototype.setDenominator = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.FmdParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    precisionBits: jspb.Message.getFieldWithDefault(msg, 1, 0),
    asOfBlockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.FmdParameters;
  return proto.penumbra.core.component.chain.v1alpha1.FmdParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrecisionBits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAsOfBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.FmdParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrecisionBits();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAsOfBlockHeight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 precision_bits = 1;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.getPrecisionBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.setPrecisionBits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 as_of_block_height = 2;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.getAsOfBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.FmdParameters} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.FmdParameters.prototype.setAsOfBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.KnownAssets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetsList: jspb.Message.toObjectList(msg.getAssetsList(),
    penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.KnownAssets;
  return proto.penumbra.core.component.chain.v1alpha1.KnownAssets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.deserializeBinaryFromReader);
      msg.addAssets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.KnownAssets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * repeated penumbra.core.asset.v1alpha1.DenomMetadata assets = 1;
 * @return {!Array<!proto.penumbra.core.asset.v1alpha1.DenomMetadata>}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.getAssetsList = function() {
  return /** @type{!Array<!proto.penumbra.core.asset.v1alpha1.DenomMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata, 1));
};


/**
 * @param {!Array<!proto.penumbra.core.asset.v1alpha1.DenomMetadata>} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets} returns this
*/
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.setAssetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.core.asset.v1alpha1.DenomMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.core.asset.v1alpha1.DenomMetadata}
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.addAssets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.core.asset.v1alpha1.DenomMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.KnownAssets} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.KnownAssets.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.NoteSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.NoteSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.NoteSource}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.NoteSource;
  return proto.penumbra.core.component.chain.v1alpha1.NoteSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.NoteSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.NoteSource}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.NoteSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.NoteSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.NoteSource} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.NoteSource.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.SpendInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    noteSource: (f = msg.getNoteSource()) && proto.penumbra.core.component.chain.v1alpha1.NoteSource.toObject(includeInstance, f),
    spendHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.SpendInfo;
  return proto.penumbra.core.component.chain.v1alpha1.SpendInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.chain.v1alpha1.NoteSource;
      reader.readMessage(value,proto.penumbra.core.component.chain.v1alpha1.NoteSource.deserializeBinaryFromReader);
      msg.setNoteSource(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpendHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.SpendInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNoteSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.chain.v1alpha1.NoteSource.serializeBinaryToWriter
    );
  }
  f = message.getSpendHeight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional NoteSource note_source = 1;
 * @return {?proto.penumbra.core.component.chain.v1alpha1.NoteSource}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.getNoteSource = function() {
  return /** @type{?proto.penumbra.core.component.chain.v1alpha1.NoteSource} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.chain.v1alpha1.NoteSource, 1));
};


/**
 * @param {?proto.penumbra.core.component.chain.v1alpha1.NoteSource|undefined} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} returns this
*/
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.setNoteSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.clearNoteSource = function() {
  return this.setNoteSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.hasNoteSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 spend_height = 2;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.getSpendHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.SpendInfo} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.SpendInfo.prototype.setSpendHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.GenesisContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainParams: (f = msg.getChainParams()) && proto.penumbra.core.component.chain.v1alpha1.ChainParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.GenesisContent;
  return proto.penumbra.core.component.chain.v1alpha1.GenesisContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.chain.v1alpha1.ChainParameters;
      reader.readMessage(value,proto.penumbra.core.component.chain.v1alpha1.ChainParameters.deserializeBinaryFromReader);
      msg.setChainParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.GenesisContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.chain.v1alpha1.ChainParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChainParameters chain_params = 1;
 * @return {?proto.penumbra.core.component.chain.v1alpha1.ChainParameters}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.getChainParams = function() {
  return /** @type{?proto.penumbra.core.component.chain.v1alpha1.ChainParameters} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.chain.v1alpha1.ChainParameters, 1));
};


/**
 * @param {?proto.penumbra.core.component.chain.v1alpha1.ChainParameters|undefined} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent} returns this
*/
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.setChainParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.GenesisContent} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.clearChainParams = function() {
  return this.setChainParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.chain.v1alpha1.GenesisContent.prototype.hasChainParams = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.Epoch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Epoch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Epoch}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.Epoch;
  return proto.penumbra.core.component.chain.v1alpha1.Epoch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Epoch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Epoch}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.Epoch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.Epoch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStartHeight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 index = 1;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Epoch} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 start_height = 2;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.getStartHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.Epoch} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.Epoch.prototype.setStartHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest;
  return proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: (f = msg.getEpoch()) && proto.penumbra.core.component.chain.v1alpha1.Epoch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse;
  return proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.chain.v1alpha1.Epoch;
      reader.readMessage(value,proto.penumbra.core.component.chain.v1alpha1.Epoch.deserializeBinaryFromReader);
      msg.setEpoch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.chain.v1alpha1.Epoch.serializeBinaryToWriter
    );
  }
};


/**
 * optional Epoch epoch = 1;
 * @return {?proto.penumbra.core.component.chain.v1alpha1.Epoch}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.getEpoch = function() {
  return /** @type{?proto.penumbra.core.component.chain.v1alpha1.Epoch} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.chain.v1alpha1.Epoch, 1));
};


/**
 * @param {?proto.penumbra.core.component.chain.v1alpha1.Epoch|undefined} value
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse} returns this
*/
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.setEpoch = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse} returns this
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.clearEpoch = function() {
  return this.setEpoch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.chain.v1alpha1.EpochByHeightResponse.prototype.hasEpoch = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.penumbra.core.component.chain.v1alpha1);
