// source: penumbra/core/component/shielded_pool/v1alpha1/shielded_pool.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var penumbra_crypto_tct_v1alpha1_tct_pb = require('../../../../../penumbra/crypto/tct/v1alpha1/tct_pb.js');
goog.object.extend(proto, penumbra_crypto_tct_v1alpha1_tct_pb);
var penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb = require('../../../../../penumbra/crypto/decaf377_rdsa/v1alpha1/decaf377_rdsa_pb.js');
goog.object.extend(proto, penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb);
var penumbra_core_asset_v1alpha1_asset_pb = require('../../../../../penumbra/core/asset/v1alpha1/asset_pb.js');
goog.object.extend(proto, penumbra_core_asset_v1alpha1_asset_pb);
var penumbra_core_keys_v1alpha1_keys_pb = require('../../../../../penumbra/core/keys/v1alpha1/keys_pb.js');
goog.object.extend(proto, penumbra_core_keys_v1alpha1_keys_pb);
var penumbra_core_num_v1alpha1_num_pb = require('../../../../../penumbra/core/num/v1alpha1/num_pb.js');
goog.object.extend(proto, penumbra_core_num_v1alpha1_num_pb);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.Note', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.Output', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.OutputViewCase', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.Spend', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.SpendViewCase', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof', null, global);
goog.exportSymbol('proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.Note, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.Note.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.Note';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.Spend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.Spend';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.oneofGroups_);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.Output.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.oneofGroups_);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.repeatedFields_, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.displayName = 'proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Note.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && penumbra_core_asset_v1alpha1_asset_pb.Value.toObject(includeInstance, f),
    rseed: msg.getRseed_asB64(),
    address: (f = msg.getAddress()) && penumbra_core_keys_v1alpha1_keys_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.Note;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Note.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.Value;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRseed(value);
      break;
    case 3:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.Address;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.Note.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getRseed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.asset.v1alpha1.Value value = 1;
 * @return {?proto.penumbra.core.asset.v1alpha1.Value}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.getValue = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.Value} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.Value, 1));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.Value|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes rseed = 2;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.getRseed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes rseed = 2;
 * This is a type-conversion wrapper around `getRseed()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.getRseed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRseed()));
};


/**
 * optional bytes rseed = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRseed()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.getRseed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRseed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.setRseed = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional penumbra.core.keys.v1alpha1.Address address = 3;
 * @return {?proto.penumbra.core.keys.v1alpha1.Address}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.getAddress = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.Address} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.Address, 3));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.Address|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Note} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Note.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && penumbra_core_asset_v1alpha1_asset_pb.ValueView.toObject(includeInstance, f),
    rseed: msg.getRseed_asB64(),
    address: (f = msg.getAddress()) && penumbra_core_keys_v1alpha1_keys_pb.AddressView.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.ValueView;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.ValueView.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRseed(value);
      break;
    case 3:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.AddressView;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.AddressView.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.ValueView.serializeBinaryToWriter
    );
  }
  f = message.getRseed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.AddressView.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.asset.v1alpha1.ValueView value = 1;
 * @return {?proto.penumbra.core.asset.v1alpha1.ValueView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.getValue = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.ValueView} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.ValueView, 1));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.ValueView|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes rseed = 2;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.getRseed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes rseed = 2;
 * This is a type-conversion wrapper around `getRseed()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.getRseed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRseed()));
};


/**
 * optional bytes rseed = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRseed()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.getRseed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRseed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.setRseed = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional penumbra.core.keys.v1alpha1.AddressView address = 3;
 * @return {?proto.penumbra.core.keys.v1alpha1.AddressView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.getAddress = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.AddressView} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.AddressView, 3));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.AddressView|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    noteCommitment: (f = msg.getNoteCommitment()) && penumbra_crypto_tct_v1alpha1_tct_pb.StateCommitment.toObject(includeInstance, f),
    ephemeralKey: msg.getEphemeralKey_asB64(),
    encryptedNote: (f = msg.getEncryptedNote()) && proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_crypto_tct_v1alpha1_tct_pb.StateCommitment;
      reader.readMessage(value,penumbra_crypto_tct_v1alpha1_tct_pb.StateCommitment.deserializeBinaryFromReader);
      msg.setNoteCommitment(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEphemeralKey(value);
      break;
    case 3:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.deserializeBinaryFromReader);
      msg.setEncryptedNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNoteCommitment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_crypto_tct_v1alpha1_tct_pb.StateCommitment.serializeBinaryToWriter
    );
  }
  f = message.getEphemeralKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getEncryptedNote();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.crypto.tct.v1alpha1.StateCommitment note_commitment = 1;
 * @return {?proto.penumbra.crypto.tct.v1alpha1.StateCommitment}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.getNoteCommitment = function() {
  return /** @type{?proto.penumbra.crypto.tct.v1alpha1.StateCommitment} */ (
    jspb.Message.getWrapperField(this, penumbra_crypto_tct_v1alpha1_tct_pb.StateCommitment, 1));
};


/**
 * @param {?proto.penumbra.crypto.tct.v1alpha1.StateCommitment|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.setNoteCommitment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.clearNoteCommitment = function() {
  return this.setNoteCommitment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.hasNoteCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes ephemeral_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.getEphemeralKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes ephemeral_key = 2;
 * This is a type-conversion wrapper around `getEphemeralKey()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.getEphemeralKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEphemeralKey()));
};


/**
 * optional bytes ephemeral_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEphemeralKey()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.getEphemeralKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEphemeralKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.setEphemeralKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional NoteCiphertext encrypted_note = 3;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.getEncryptedNote = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext, 3));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteCiphertext|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.setEncryptedNote = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.clearEncryptedNote = function() {
  return this.setEncryptedNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.prototype.hasEncryptedNote = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.ZKNullifierDerivationProof.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.toObject(includeInstance, f),
    authSig: (f = msg.getAuthSig()) && penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb.SpendAuthSignature.toObject(includeInstance, f),
    proof: (f = msg.getProof()) && proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.Spend;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb.SpendAuthSignature;
      reader.readMessage(value,penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb.SpendAuthSignature.deserializeBinaryFromReader);
      msg.setAuthSig(value);
      break;
    case 3:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.deserializeBinaryFromReader);
      msg.setProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.serializeBinaryToWriter
    );
  }
  f = message.getAuthSig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb.SpendAuthSignature.serializeBinaryToWriter
    );
  }
  f = message.getProof();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof.serializeBinaryToWriter
    );
  }
};


/**
 * optional SpendBody body = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.getBody = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.crypto.decaf377_rdsa.v1alpha1.SpendAuthSignature auth_sig = 2;
 * @return {?proto.penumbra.crypto.decaf377_rdsa.v1alpha1.SpendAuthSignature}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.getAuthSig = function() {
  return /** @type{?proto.penumbra.crypto.decaf377_rdsa.v1alpha1.SpendAuthSignature} */ (
    jspb.Message.getWrapperField(this, penumbra_crypto_decaf377_rdsa_v1alpha1_decaf377_rdsa_pb.SpendAuthSignature, 2));
};


/**
 * @param {?proto.penumbra.crypto.decaf377_rdsa.v1alpha1.SpendAuthSignature|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.setAuthSig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.clearAuthSig = function() {
  return this.setAuthSig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.hasAuthSig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ZKSpendProof proof = 3;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.getProof = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof, 3));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKSpendProof|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.setProof = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.clearProof = function() {
  return this.setProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.prototype.hasProof = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    balanceCommitment: (f = msg.getBalanceCommitment()) && penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.toObject(includeInstance, f),
    nullifier: msg.getNullifier_asB64(),
    rk: msg.getRk_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.deserializeBinaryFromReader);
      msg.setBalanceCommitment(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNullifier(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalanceCommitment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.serializeBinaryToWriter
    );
  }
  f = message.getNullifier_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getRk_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional penumbra.core.asset.v1alpha1.BalanceCommitment balance_commitment = 1;
 * @return {?proto.penumbra.core.asset.v1alpha1.BalanceCommitment}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getBalanceCommitment = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.BalanceCommitment} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment, 1));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.BalanceCommitment|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.setBalanceCommitment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.clearBalanceCommitment = function() {
  return this.setBalanceCommitment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.hasBalanceCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes nullifier = 3;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getNullifier = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes nullifier = 3;
 * This is a type-conversion wrapper around `getNullifier()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getNullifier_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNullifier()));
};


/**
 * optional bytes nullifier = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNullifier()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getNullifier_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNullifier()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.setNullifier = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes rk = 4;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getRk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes rk = 4;
 * This is a type-conversion wrapper around `getRk()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getRk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRk()));
};


/**
 * optional bytes rk = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRk()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.getRk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRk()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendBody.prototype.setRk = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.SpendViewCase = {
  SPEND_VIEW_NOT_SET: 0,
  VISIBLE: 1,
  OPAQUE: 2
};

/**
 * @return {proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.SpendViewCase}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.getSpendViewCase = function() {
  return /** @type {proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.SpendViewCase} */(jspb.Message.computeOneofCase(this, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.toObject = function(includeInstance, msg) {
  var f, obj = {
    visible: (f = msg.getVisible()) && proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.deserializeBinaryFromReader);
      msg.setVisible(value);
      break;
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisible();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.toObject = function(includeInstance, msg) {
  var f, obj = {
    spend: (f = msg.getSpend()) && proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.toObject(includeInstance, f),
    note: (f = msg.getNote()) && proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.Spend;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.deserializeBinaryFromReader);
      msg.setSpend(value);
      break;
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.deserializeBinaryFromReader);
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpend();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.serializeBinaryToWriter
    );
  }
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.serializeBinaryToWriter
    );
  }
};


/**
 * optional Spend spend = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.getSpend = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.Spend, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.setSpend = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.clearSpend = function() {
  return this.setSpend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.hasSpend = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NoteView note = 2;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.getNote = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView, 2));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.setNote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.clearNote = function() {
  return this.setNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible.prototype.hasNote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.toObject = function(includeInstance, msg) {
  var f, obj = {
    spend: (f = msg.getSpend()) && proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.Spend;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.deserializeBinaryFromReader);
      msg.setSpend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpend();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.Spend.serializeBinaryToWriter
    );
  }
};


/**
 * optional Spend spend = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.getSpend = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.Spend, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.Spend|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.setSpend = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.clearSpend = function() {
  return this.setSpend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque.prototype.hasSpend = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Visible visible = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.getVisible = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Visible|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.setVisible = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.clearVisible = function() {
  return this.setVisible(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.hasVisible = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Opaque opaque = 2;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.getOpaque = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque, 2));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.Opaque|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.setOpaque = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendView.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    note: (f = msg.getNote()) && proto.penumbra.core.component.shielded_pool.v1alpha1.Note.toObject(includeInstance, f),
    position: jspb.Message.getFieldWithDefault(msg, 2, 0),
    randomizer: msg.getRandomizer_asB64(),
    valueBlinding: msg.getValueBlinding_asB64(),
    proofBlindingR: msg.getProofBlindingR_asB64(),
    proofBlindingS: msg.getProofBlindingS_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.Note;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.Note.deserializeBinaryFromReader);
      msg.setNote(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPosition(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRandomizer(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValueBlinding(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProofBlindingR(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProofBlindingS(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.Note.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRandomizer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getValueBlinding_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getProofBlindingR_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getProofBlindingS_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional Note note = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.Note}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getNote = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.Note} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.Note, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.Note|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setNote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.clearNote = function() {
  return this.setNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.hasNote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 position = 2;
 * @return {number}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes randomizer = 3;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getRandomizer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes randomizer = 3;
 * This is a type-conversion wrapper around `getRandomizer()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getRandomizer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRandomizer()));
};


/**
 * optional bytes randomizer = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRandomizer()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getRandomizer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRandomizer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setRandomizer = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes value_blinding = 4;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getValueBlinding = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes value_blinding = 4;
 * This is a type-conversion wrapper around `getValueBlinding()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getValueBlinding_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValueBlinding()));
};


/**
 * optional bytes value_blinding = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValueBlinding()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getValueBlinding_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValueBlinding()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setValueBlinding = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes proof_blinding_r = 5;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingR = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes proof_blinding_r = 5;
 * This is a type-conversion wrapper around `getProofBlindingR()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingR_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProofBlindingR()));
};


/**
 * optional bytes proof_blinding_r = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofBlindingR()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingR_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProofBlindingR()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setProofBlindingR = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes proof_blinding_s = 6;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingS = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes proof_blinding_s = 6;
 * This is a type-conversion wrapper around `getProofBlindingS()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingS_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProofBlindingS()));
};


/**
 * optional bytes proof_blinding_s = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofBlindingS()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.getProofBlindingS_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProofBlindingS()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.SpendPlan.prototype.setProofBlindingS = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.toObject(includeInstance, f),
    proof: (f = msg.getProof()) && proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.Output;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.deserializeBinaryFromReader);
      msg.setProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.serializeBinaryToWriter
    );
  }
  f = message.getProof();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof.serializeBinaryToWriter
    );
  }
};


/**
 * optional OutputBody body = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.getBody = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ZKOutputProof proof = 2;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.getProof = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof, 2));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.ZKOutputProof|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.setProof = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.Output} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.clearProof = function() {
  return this.setProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.Output.prototype.hasProof = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    notePayload: (f = msg.getNotePayload()) && proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.toObject(includeInstance, f),
    balanceCommitment: (f = msg.getBalanceCommitment()) && penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.toObject(includeInstance, f),
    wrappedMemoKey: msg.getWrappedMemoKey_asB64(),
    ovkWrappedKey: msg.getOvkWrappedKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.deserializeBinaryFromReader);
      msg.setNotePayload(value);
      break;
    case 2:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.deserializeBinaryFromReader);
      msg.setBalanceCommitment(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWrappedMemoKey(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOvkWrappedKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotePayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload.serializeBinaryToWriter
    );
  }
  f = message.getBalanceCommitment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment.serializeBinaryToWriter
    );
  }
  f = message.getWrappedMemoKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOvkWrappedKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional NotePayload note_payload = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getNotePayload = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.NotePayload|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.setNotePayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.clearNotePayload = function() {
  return this.setNotePayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.hasNotePayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.core.asset.v1alpha1.BalanceCommitment balance_commitment = 2;
 * @return {?proto.penumbra.core.asset.v1alpha1.BalanceCommitment}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getBalanceCommitment = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.BalanceCommitment} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.BalanceCommitment, 2));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.BalanceCommitment|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.setBalanceCommitment = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.clearBalanceCommitment = function() {
  return this.setBalanceCommitment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.hasBalanceCommitment = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes wrapped_memo_key = 3;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getWrappedMemoKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes wrapped_memo_key = 3;
 * This is a type-conversion wrapper around `getWrappedMemoKey()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getWrappedMemoKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getWrappedMemoKey()));
};


/**
 * optional bytes wrapped_memo_key = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWrappedMemoKey()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getWrappedMemoKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getWrappedMemoKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.setWrappedMemoKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes ovk_wrapped_key = 4;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getOvkWrappedKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes ovk_wrapped_key = 4;
 * This is a type-conversion wrapper around `getOvkWrappedKey()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getOvkWrappedKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOvkWrappedKey()));
};


/**
 * optional bytes ovk_wrapped_key = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOvkWrappedKey()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.getOvkWrappedKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOvkWrappedKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputBody.prototype.setOvkWrappedKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.OutputViewCase = {
  OUTPUT_VIEW_NOT_SET: 0,
  VISIBLE: 1,
  OPAQUE: 2
};

/**
 * @return {proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.OutputViewCase}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.getOutputViewCase = function() {
  return /** @type {proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.OutputViewCase} */(jspb.Message.computeOneofCase(this, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.toObject = function(includeInstance, msg) {
  var f, obj = {
    visible: (f = msg.getVisible()) && proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.deserializeBinaryFromReader);
      msg.setVisible(value);
      break;
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisible();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.toObject = function(includeInstance, msg) {
  var f, obj = {
    output: (f = msg.getOutput()) && proto.penumbra.core.component.shielded_pool.v1alpha1.Output.toObject(includeInstance, f),
    note: (f = msg.getNote()) && proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.toObject(includeInstance, f),
    payloadKey: (f = msg.getPayloadKey()) && penumbra_core_keys_v1alpha1_keys_pb.PayloadKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.Output;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.Output.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.deserializeBinaryFromReader);
      msg.setNote(value);
      break;
    case 3:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.PayloadKey;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.PayloadKey.deserializeBinaryFromReader);
      msg.setPayloadKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.Output.serializeBinaryToWriter
    );
  }
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView.serializeBinaryToWriter
    );
  }
  f = message.getPayloadKey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.PayloadKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional Output output = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.Output}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.getOutput = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.Output} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.Output, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.Output|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.setOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.clearOutput = function() {
  return this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NoteView note = 2;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.getNote = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView, 2));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.NoteView|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.setNote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.clearNote = function() {
  return this.setNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.hasNote = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional penumbra.core.keys.v1alpha1.PayloadKey payload_key = 3;
 * @return {?proto.penumbra.core.keys.v1alpha1.PayloadKey}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.getPayloadKey = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.PayloadKey} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.PayloadKey, 3));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.PayloadKey|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.setPayloadKey = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.clearPayloadKey = function() {
  return this.setPayloadKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible.prototype.hasPayloadKey = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.toObject = function(includeInstance, msg) {
  var f, obj = {
    output: (f = msg.getOutput()) && proto.penumbra.core.component.shielded_pool.v1alpha1.Output.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.Output;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.Output.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.Output.serializeBinaryToWriter
    );
  }
};


/**
 * optional Output output = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.Output}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.getOutput = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.Output} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.Output, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.Output|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.setOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.clearOutput = function() {
  return this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Visible visible = 1;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.getVisible = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible, 1));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Visible|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.setVisible = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.clearVisible = function() {
  return this.setVisible(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.hasVisible = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Opaque opaque = 2;
 * @return {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.getOpaque = function() {
  return /** @type{?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque, 2));
};


/**
 * @param {?proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.Opaque|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.setOpaque = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputView.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && penumbra_core_asset_v1alpha1_asset_pb.Value.toObject(includeInstance, f),
    destAddress: (f = msg.getDestAddress()) && penumbra_core_keys_v1alpha1_keys_pb.Address.toObject(includeInstance, f),
    rseed: msg.getRseed_asB64(),
    valueBlinding: msg.getValueBlinding_asB64(),
    proofBlindingR: msg.getProofBlindingR_asB64(),
    proofBlindingS: msg.getProofBlindingS_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.Value;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.Address;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.Address.deserializeBinaryFromReader);
      msg.setDestAddress(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRseed(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValueBlinding(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProofBlindingR(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProofBlindingS(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getDestAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getRseed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getValueBlinding_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getProofBlindingR_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getProofBlindingS_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional penumbra.core.asset.v1alpha1.Value value = 1;
 * @return {?proto.penumbra.core.asset.v1alpha1.Value}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getValue = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.Value} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.Value, 1));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.Value|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.core.keys.v1alpha1.Address dest_address = 2;
 * @return {?proto.penumbra.core.keys.v1alpha1.Address}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getDestAddress = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.Address} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.Address, 2));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.Address|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setDestAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.clearDestAddress = function() {
  return this.setDestAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.hasDestAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes rseed = 3;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getRseed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes rseed = 3;
 * This is a type-conversion wrapper around `getRseed()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getRseed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRseed()));
};


/**
 * optional bytes rseed = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRseed()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getRseed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRseed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setRseed = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes value_blinding = 4;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getValueBlinding = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes value_blinding = 4;
 * This is a type-conversion wrapper around `getValueBlinding()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getValueBlinding_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValueBlinding()));
};


/**
 * optional bytes value_blinding = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValueBlinding()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getValueBlinding_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValueBlinding()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setValueBlinding = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes proof_blinding_r = 5;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingR = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes proof_blinding_r = 5;
 * This is a type-conversion wrapper around `getProofBlindingR()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingR_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProofBlindingR()));
};


/**
 * optional bytes proof_blinding_r = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofBlindingR()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingR_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProofBlindingR()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setProofBlindingR = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes proof_blinding_s = 6;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingS = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes proof_blinding_s = 6;
 * This is a type-conversion wrapper around `getProofBlindingS()`
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingS_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProofBlindingS()));
};


/**
 * optional bytes proof_blinding_s = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofBlindingS()`
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.getProofBlindingS_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProofBlindingS()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.OutputPlan.prototype.setProofBlindingS = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetId: (f = msg.getAssetId()) && penumbra_core_asset_v1alpha1_asset_pb.AssetId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.AssetId;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.AssetId.deserializeBinaryFromReader);
      msg.setAssetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAssetId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.AssetId.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional penumbra.core.asset.v1alpha1.AssetId asset_id = 2;
 * @return {?proto.penumbra.core.asset.v1alpha1.AssetId}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.getAssetId = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.AssetId} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.AssetId, 2));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.AssetId|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.clearAssetId = function() {
  return this.setAssetId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdRequest.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    denomMetadata: (f = msg.getDenomMetadata()) && penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.deserializeBinaryFromReader);
      msg.setDenomMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenomMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.asset.v1alpha1.DenomMetadata denom_metadata = 1;
 * @return {?proto.penumbra.core.asset.v1alpha1.DenomMetadata}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.getDenomMetadata = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.DenomMetadata} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.DenomMetadata, 1));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.DenomMetadata|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.setDenomMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.clearDenomMetadata = function() {
  return this.setDenomMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.DenomMetadataByIdResponse.prototype.hasDenomMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    allocationsList: jspb.Message.toObjectList(msg.getAllocationsList(),
    proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation;
      reader.readMessage(value,proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.deserializeBinaryFromReader);
      msg.addAllocations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && penumbra_core_num_v1alpha1_num_pb.Amount.toObject(includeInstance, f),
    denom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: (f = msg.getAddress()) && penumbra_core_keys_v1alpha1_keys_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation;
  return proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_num_v1alpha1_num_pb.Amount;
      reader.readMessage(value,penumbra_core_num_v1alpha1_num_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 3:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.Address;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_num_v1alpha1_num_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.core.num.v1alpha1.Amount amount = 1;
 * @return {?proto.penumbra.core.num.v1alpha1.Amount}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.getAmount = function() {
  return /** @type{?proto.penumbra.core.num.v1alpha1.Amount} */ (
    jspb.Message.getWrapperField(this, penumbra_core_num_v1alpha1_num_pb.Amount, 1));
};


/**
 * @param {?proto.penumbra.core.num.v1alpha1.Amount|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string denom = 2;
 * @return {string}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional penumbra.core.keys.v1alpha1.Address address = 3;
 * @return {?proto.penumbra.core.keys.v1alpha1.Address}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.getAddress = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.Address} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.Address, 3));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.Address|undefined} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Allocation allocations = 2;
 * @return {!Array<!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation>}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.getAllocationsList = function() {
  return /** @type{!Array<!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation, 2));
};


/**
 * @param {!Array<!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation>} value
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent} returns this
*/
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.setAllocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation}
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.addAllocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.Allocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent} returns this
 */
proto.penumbra.core.component.shielded_pool.v1alpha1.GenesisContent.prototype.clearAllocationsList = function() {
  return this.setAllocationsList([]);
};


goog.object.extend(exports, proto.penumbra.core.component.shielded_pool.v1alpha1);
