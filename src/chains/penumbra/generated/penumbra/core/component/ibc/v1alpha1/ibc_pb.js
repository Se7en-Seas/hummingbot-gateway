// source: penumbra/core/component/ibc/v1alpha1/ibc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var ibc_core_client_v1_client_pb = require('../../../../../ibc/core/client/v1/client_pb.js');
goog.object.extend(proto, ibc_core_client_v1_client_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var penumbra_core_keys_v1alpha1_keys_pb = require('../../../../../penumbra/core/keys/v1alpha1/keys_pb.js');
goog.object.extend(proto, penumbra_core_keys_v1alpha1_keys_pb);
var penumbra_core_num_v1alpha1_num_pb = require('../../../../../penumbra/core/num/v1alpha1/num_pb.js');
goog.object.extend(proto, penumbra_core_num_v1alpha1_num_pb);
var penumbra_core_asset_v1alpha1_asset_pb = require('../../../../../penumbra/core/asset/v1alpha1/asset_pb.js');
goog.object.extend(proto, penumbra_core_asset_v1alpha1_asset_pb);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.ClientConnections', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.ClientCounter', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.ClientData', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.ConsensusState', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.GenesisContent', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.IbcAction', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.IbcParameters', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal', null, global);
goog.exportSymbol('proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.IbcAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.IbcAction.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.IbcAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.ClientData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.ClientData.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.ClientData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.ClientCounter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.ClientCounter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.ConsensusState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.ConsensusState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.repeatedFields_, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.repeatedFields_, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.ClientConnections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.ClientConnections';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.IbcParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.IbcParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.core.component.ibc.v1alpha1.GenesisContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.displayName = 'proto.penumbra.core.component.ibc.v1alpha1.GenesisContent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.IbcAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawAction: (f = msg.getRawAction()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.IbcAction;
  return proto.penumbra.core.component.ibc.v1alpha1.IbcAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRawAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.IbcAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRawAction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any raw_action = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.getRawAction = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.setRawAction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcAction} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.clearRawAction = function() {
  return this.setRawAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcAction.prototype.hasRawAction = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 3, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData;
  return proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sender = 3;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string receiver = 4;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.FungibleTokenPacketData.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && penumbra_core_num_v1alpha1_num_pb.Amount.toObject(includeInstance, f),
    denom: (f = msg.getDenom()) && penumbra_core_asset_v1alpha1_asset_pb.Denom.toObject(includeInstance, f),
    destinationChainAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    returnAddress: (f = msg.getReturnAddress()) && penumbra_core_keys_v1alpha1_keys_pb.Address.toObject(includeInstance, f),
    timeoutHeight: (f = msg.getTimeoutHeight()) && ibc_core_client_v1_client_pb.Height.toObject(includeInstance, f),
    timeoutTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sourceChannel: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal;
  return proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new penumbra_core_num_v1alpha1_num_pb.Amount;
      reader.readMessage(value,penumbra_core_num_v1alpha1_num_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = new penumbra_core_asset_v1alpha1_asset_pb.Denom;
      reader.readMessage(value,penumbra_core_asset_v1alpha1_asset_pb.Denom.deserializeBinaryFromReader);
      msg.setDenom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationChainAddress(value);
      break;
    case 4:
      var value = new penumbra_core_keys_v1alpha1_keys_pb.Address;
      reader.readMessage(value,penumbra_core_keys_v1alpha1_keys_pb.Address.deserializeBinaryFromReader);
      msg.setReturnAddress(value);
      break;
    case 5:
      var value = new ibc_core_client_v1_client_pb.Height;
      reader.readMessage(value,ibc_core_client_v1_client_pb.Height.deserializeBinaryFromReader);
      msg.setTimeoutHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeoutTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      penumbra_core_num_v1alpha1_num_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDenom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      penumbra_core_asset_v1alpha1_asset_pb.Denom.serializeBinaryToWriter
    );
  }
  f = message.getDestinationChainAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReturnAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      penumbra_core_keys_v1alpha1_keys_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getTimeoutHeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      ibc_core_client_v1_client_pb.Height.serializeBinaryToWriter
    );
  }
  f = message.getTimeoutTime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getSourceChannel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional penumbra.core.num.v1alpha1.Amount amount = 1;
 * @return {?proto.penumbra.core.num.v1alpha1.Amount}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getAmount = function() {
  return /** @type{?proto.penumbra.core.num.v1alpha1.Amount} */ (
    jspb.Message.getWrapperField(this, penumbra_core_num_v1alpha1_num_pb.Amount, 1));
};


/**
 * @param {?proto.penumbra.core.num.v1alpha1.Amount|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.core.asset.v1alpha1.Denom denom = 2;
 * @return {?proto.penumbra.core.asset.v1alpha1.Denom}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getDenom = function() {
  return /** @type{?proto.penumbra.core.asset.v1alpha1.Denom} */ (
    jspb.Message.getWrapperField(this, penumbra_core_asset_v1alpha1_asset_pb.Denom, 2));
};


/**
 * @param {?proto.penumbra.core.asset.v1alpha1.Denom|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setDenom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.clearDenom = function() {
  return this.setDenom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.hasDenom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string destination_chain_address = 3;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getDestinationChainAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setDestinationChainAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional penumbra.core.keys.v1alpha1.Address return_address = 4;
 * @return {?proto.penumbra.core.keys.v1alpha1.Address}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getReturnAddress = function() {
  return /** @type{?proto.penumbra.core.keys.v1alpha1.Address} */ (
    jspb.Message.getWrapperField(this, penumbra_core_keys_v1alpha1_keys_pb.Address, 4));
};


/**
 * @param {?proto.penumbra.core.keys.v1alpha1.Address|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setReturnAddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.clearReturnAddress = function() {
  return this.setReturnAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.hasReturnAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ibc.core.client.v1.Height timeout_height = 5;
 * @return {?proto.ibc.core.client.v1.Height}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getTimeoutHeight = function() {
  return /** @type{?proto.ibc.core.client.v1.Height} */ (
    jspb.Message.getWrapperField(this, ibc_core_client_v1_client_pb.Height, 5));
};


/**
 * @param {?proto.ibc.core.client.v1.Height|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setTimeoutHeight = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.clearTimeoutHeight = function() {
  return this.setTimeoutHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.hasTimeoutHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 timeout_time = 6;
 * @return {number}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getTimeoutTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setTimeoutTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string source_channel = 7;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.getSourceChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.Ics20Withdrawal.prototype.setSourceChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.ClientData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientState: (f = msg.getClientState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    processedTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processedHeight: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.ClientData;
  return proto.penumbra.core.component.ibc.v1alpha1.ClientData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setClientState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessedTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProcessedHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.ClientData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getProcessedTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessedHeight();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any client_state = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.getClientState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.setClientState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.clearClientState = function() {
  return this.setClientState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.hasClientState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string processed_time = 3;
 * @return {string}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.getProcessedTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.setProcessedTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 processed_height = 4;
 * @return {number}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.getProcessedHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientData} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientData.prototype.setProcessedHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.toObject = function(includeInstance, msg) {
  var f, obj = {
    counter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.ClientCounter;
  return proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCounter();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 counter = 1;
 * @return {number}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.prototype.getCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientCounter} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientCounter.prototype.setCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusState: (f = msg.getConsensusState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.ConsensusState;
  return proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setConsensusState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any consensus_state = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.getConsensusState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.setConsensusState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConsensusState} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.clearConsensusState = function() {
  return this.setConsensusState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConsensusState.prototype.hasConsensusState = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.toObject = function(includeInstance, msg) {
  var f, obj = {
    heightsList: jspb.Message.toObjectList(msg.getHeightsList(),
    ibc_core_client_v1_client_pb.Height.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights;
  return proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_core_client_v1_client_pb.Height;
      reader.readMessage(value,ibc_core_client_v1_client_pb.Height.deserializeBinaryFromReader);
      msg.addHeights(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeightsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_core_client_v1_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ibc.core.client.v1.Height heights = 1;
 * @return {!Array<!proto.ibc.core.client.v1.Height>}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.getHeightsList = function() {
  return /** @type{!Array<!proto.ibc.core.client.v1.Height>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_core_client_v1_client_pb.Height, 1));
};


/**
 * @param {!Array<!proto.ibc.core.client.v1.Height>} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.setHeightsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.core.client.v1.Height=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.core.client.v1.Height}
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.addHeights = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.core.client.v1.Height, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.VerifiedHeights.prototype.clearHeightsList = function() {
  return this.setHeightsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.toObject = function(includeInstance, msg) {
  var f, obj = {
    counter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter;
  return proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCounter();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 counter = 1;
 * @return {number}
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.prototype.getCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ConnectionCounter.prototype.setCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.ClientConnections;
  return proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string connections = 1;
 * @return {!Array<string>}
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.getConnectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.setConnectionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.addConnections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.ClientConnections} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.ClientConnections.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    ibcEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    inboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    outboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.IbcParameters;
  return proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIbcEnabled(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInboundIcs20TransfersEnabled(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutboundIcs20TransfersEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIbcEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOutboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool ibc_enabled = 1;
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.getIbcEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.setIbcEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool inbound_ics20_transfers_enabled = 2;
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.getInboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.setInboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool outbound_ics20_transfers_enabled = 3;
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.getOutboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.prototype.setOutboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    ibcParams: (f = msg.getIbcParams()) && proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.core.component.ibc.v1alpha1.GenesisContent;
  return proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.core.component.ibc.v1alpha1.IbcParameters;
      reader.readMessage(value,proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.deserializeBinaryFromReader);
      msg.setIbcParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIbcParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.core.component.ibc.v1alpha1.IbcParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional IbcParameters ibc_params = 1;
 * @return {?proto.penumbra.core.component.ibc.v1alpha1.IbcParameters}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.getIbcParams = function() {
  return /** @type{?proto.penumbra.core.component.ibc.v1alpha1.IbcParameters} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.core.component.ibc.v1alpha1.IbcParameters, 1));
};


/**
 * @param {?proto.penumbra.core.component.ibc.v1alpha1.IbcParameters|undefined} value
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent} returns this
*/
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.setIbcParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.core.component.ibc.v1alpha1.GenesisContent} returns this
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.clearIbcParams = function() {
  return this.setIbcParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.core.component.ibc.v1alpha1.GenesisContent.prototype.hasIbcParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.penumbra.core.component.ibc.v1alpha1);
